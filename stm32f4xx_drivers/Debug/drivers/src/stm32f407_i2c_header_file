/*
 * stm32f4xx_i2c_drivers.h
 *
 *  Created on: Feb. 25, 2020
 *      Author: Bibin Eugine
 */

#ifndef INC_STM32F4XX_I2C_DRIVERS_H_
#define INC_STM32F4XX_I2C_DRIVERS_H_


#include "stm32f4xx.h"

//config structure of i2cx perpherial
typedef struct{
	uint32_t I2C_SCLSpeed;
	uint32_t I2C_DeviceAddress;// for this user go to give the information
	uint32_t I2C_ACKControl;
	uint32_t I2C_FMDutyCycle;
}I2C_Config_t;

//handle structure of I2Cx peripheral
typedef struct{
	I2C_RegDef_t *pI2Cx;
	I2C_Config_t I2C_Config;
}I2C_Handle_t;

//scl_speed modes
#define I2C_SCL_SPEED_SM 100000
#define I2C_SCL_SPEED_FM4k 400000
#define I2C_SCL_SPEED_fm2k 200000

//ack control

#define I2C_ACK_ENABLE      1
#define I2C_ACK_DISABLE     0

//duty cycle
#define I2C_FM_DUTY_2        0
#define I2C_FM_DUTY_16_9     1

//I2C status reg macros
#define I2C_SR1_SB             0
#define I2C_SR1_ADDR           1
#define I2C_SR1_BTF            2
#define I2C_SR1_ADD10          3
#define I2C_SR1_STOPF          4
#define I2C_SR1_RXNE           6
#define I2C_SR1_TXE            7
#define I2C_SR1_BERR           8
#define I2C_SR1_ARLO           9
#define I2C_SR1_AF             10
#define I2C_SR1_OVR            11
#define I2C_SR1_PECERR         12
#define I2C_SR1_TIMEOUT        14
#define I2C_SR1_SMBALERT       15

//I2C flag
#define I2C_FLAG_TXE                            (1<<I2C_SR1_TXE)
#define I2C_FLAG_RXNE                           (1<<I2C_SR1_RXNE)
#define I2C_FLAG_SB                             (1<<I2C_SR1_SB)
#define I2C_FLAG_OVR                            (1<<I2C_SR1_OVR)
#define I2C_FLAG_AF                             (1<<I2C_SR1_AF)
#define I2C_FLAG_ARLO                           (1<<I2C_SR1_ARLO)
#define I2C_FLAG_BERR                           (1<<I2C_SR1_BERR)
#define I2C_FLAG_STOPF                          (1<<I2C_SR1_STOPF)
#define I2C_FLAG_ADD10                          (1<<I2C_SR1_ADD10)
#define I2C_FLAG_BTF                            (1<<I2C_SR1_BTF)
#define I2C_FLAG_ADDR                           (1<<I2C_SR1_ADDR)
#define I2C_FLAG_TIMEOUT                        (1<<I2C_SR1_TIMEOUT)



/*******************APIS for GPIO driver********************************************************/

  //peripherial clock setup
  void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi);

  //Init and Deint
  void I2C_Init(I2C_Handle_t *pI2CHandle);
  void I2C_DeInit(I2C_RegDef_t *pI2Cx);

  //Data send and recieve
  void I2C_MasterSendData(I2C_Handle_t *pI2CHandle, uint8_t *pTxbuffer, uint32_t Len, uint8_t SlaveAddr);


  //IRQ configuration and ISR handling
  void I2C_IRQInterruptConfig(uint8_t IRQNUmber, uint8_t EnorDi);
  void I2C_IRQPriorityConfig(uint8_t IRQNUmber,uint32_t IRQPriority);


  //other peripherial control APIs
  void I2C_PeripherialControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi);
  uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx, uint32_t FlagName);

  //Application callback
  void I2C_ApplicationEventCallback(I2C_Handle_t *pHandle, uint8_t AppEv);


#endif /* INC_STM32F4XX_I2C_DRIVERS_H_ */
